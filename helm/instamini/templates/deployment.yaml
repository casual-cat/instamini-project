apiVersion: apps/v1
kind: Deployment
metadata:
  name: instamini-mysite
  labels:
    app: instamini
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: instamini
  template:
    metadata:
      labels:
        app: instamini
      {{- if .Values.vault.enabled }}
      # annotations:
      #   vault.hashicorp.com/agent-inject: "true"
      #   vault.hashicorp.com/agent-inject-vault-addr: "{{ .Values.vault.addr }}"
      #   vault.hashicorp.com/role: "{{ .Values.vault.role }}"
      #   vault.hashicorp.com/agent-inject-secret-dbcreds: "{{ .Values.vault.dbCredsPath }}"
      #   vault.hashicorp.com/agent-inject-template-dbcreds: |
          {{`{{- with secret "`}}{{ .Values.vault.dbCredsPath }}{{`" -}}`}}
          export MYSQL_USER="{{`{{ .Data.username }}`}}"
          export MYSQL_PASS="{{`{{ .Data.password }}`}}"
          {{`{{- end }}`}}
      {{- end }}
    spec:
      serviceAccountName: my-app-sa
      containers:
        - name: flask-container
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: {{ .Values.service.targetPort }}
          command: ["/bin/sh", "-c"]
          args:
            - >
              echo "[Vault Injection] Sourcing dbcreds..."
              if [ -f /vault/secrets/dbcreds ]; then
                . /vault/secrets/dbcreds
              else
                echo "No dynamic Vault credentials found. Using static (if set)."
              fi
              echo "Starting Flask with MySQL user=$MYSQL_USER pass=$MYSQL_PASS"
              exec python app.py
          env:
            # If you still want fallback statics
            - name: MYSQL_HOST
              valueFrom:
                secretKeyRef:
                  name: mysite-db-secrets
                  key: MYSQL_HOST
            - name: MYSQL_PORT
              valueFrom:
                secretKeyRef:
                  name: mysite-db-secrets
                  key: MYSQL_PORT
            - name: MYSQL_DB
              valueFrom:
                secretKeyRef:
                  name: mysite-db-secrets
                  key: MYSQL_DB
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysite-db-secrets
                  key: MYSQL_USER
            - name: MYSQL_PASS
              valueFrom:
                secretKeyRef:
                  name: mysite-db-secrets
                  key: MYSQL_PASS
